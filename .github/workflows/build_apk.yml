# Build APKs for Kiwi Browser
name: automatic build of apk


# Controls when the action will run. Triggers the workflow on push or pull request events
on:
  push:
    paths-ignore:
      - '*.md'
    branches: [ master ]
#  pull_request:
#    paths-ignore:
#      - '*.md'
#    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        platform: [arm, arm64, x86, x64]

    # Steps represent a sequence of tasks that will be executed as part of the job
    # /dev/sda1 has more available space than /dev/sdb1 (14 GB only on /dev/sdb1 at this stage)
    # so we want to take advantage of the available disk space on /dev/sda1
      
    # We store the main repository on /dev/sda1
    # We store the dependencies and output objects on /dev/sdb1 
    steps:
      - name: Initializing build
        run: echo Initializing build for platform ${{ matrix.platform }}
        
      - name: Reclaiming disk space on /dev/sda1 by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile
          
      - name: Reclaiming disk space on /dev/sda1 by removing .NET framework
        run: sudo rm -rf /usr/share/dotnet
        
      - name: Installing cacche
        run: |
          pushd /tmp
          git clone https://github.com/pietern/ccache -b ccbin
          pushd ccache
          ./autogen.sh
          ./configure --prefix=/usr/local
          sudo make "-j$(nproc)" install
          popd
          popd
          
      - name: Installing sccache
        run: |
          pushd /tmp
          curl -LOs https://github.com/mozilla/sccache/releases/download/0.2.7/sccache-0.2.7-x86_64-unknown-linux-musl.tar.gz
          tar -zxvf sccache-0.2.7-x86_64-unknown-linux-musl.tar.gz
          sudo mv sccache-0.2.7-x86_64-unknown-linux-musl/sccache /usr/local/bin/sccache
          rm -rf sccache-0.2.7-x86_64-unknown-linux-musl*
          popd

      - name: Checking-out source-code
        uses: actions/checkout@v2

      - name: Creating secondary disk folder in /dev/sdb1
        run: |
          sudo mkdir -p /mnt/secondary_disk
          sudo chown -R runner:docker /mnt/secondary_disk
      - name: Running symlink on /dev/sdb1 pointing to /dev/sda1
        run: ln -s /mnt/secondary_disk $GITHUB_WORKSPACE/

      - name: Checking-out CIPD dependencies in $GITHUB_WORKSPACE/.cipd
        uses: actions/checkout@v2
        with:
          repository: kiwibrowser/dependencies
          path: ./secondary_disk/.cipd 
          
      - name: Linking .cipd in the proper path and copying .gclient and .gclient_entries
        run: |
          ln -s $GITHUB_WORKSPACE/./secondary_disk/.cipd ..
          cp ../.cipd/.gclient ..
          cp ../.cipd/.gclient_entries ..
          
      - name: Updating APT repository
        run: sudo apt-get update

      - name: Installing Python and OpenJDK
        run: sudo apt-get install -y python openjdk-8-jdk-headless libncurses5

      - name: Setting-up Java 8 as default Java provider
        run: sudo update-java-alternatives --set java-1.8.0-openjdk-amd64

      - name: Installing system dependencies
        run: |
          sudo bash install-build-deps.sh --no-chromeos-fonts
          build/linux/sysroot_scripts/install-sysroot.py --arch=i386
          build/linux/sysroot_scripts/install-sysroot.py --arch=amd64
          
      - name: Creating output folder
        run: mkdir -p secondary_disk/out/android_${{ matrix.platform }}
      
      - name: Generating one-time APK signature key
        run: keytool -genkey -v -keystore keystore.jks -alias dev -keyalg RSA -keysize 2048 -validity 10000 -storepass public_password -keypass public_password -dname "cn=Kiwi Browser (unverified), ou=Actions, o=Kiwi Browser, c=GitHub"

      - name: Copying args.gn to target folder
        run: cat .build/android_arm/args.gn | sed "s#target_cpu = \"arm\"#target_cpu = \"${{ matrix.platform }}\"#" > secondary_disk/out/android_${{ matrix.platform }}/args.gn

      - name: Downloading depot_tools
        working-directory: ./secondary_disk
        run: git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        
      - name: Adding depot_tools to path
        run: echo "::add-path::$GITHUB_WORKSPACE/secondary_disk/depot_tools"

      - name: Setting environment variables
        run: |
          echo "::set-env name=CC::sccache clang -Qunused-arguments"
          echo "::set-env name=CXX::sccache clang++ -Qunused-arguments"
          
      - name: Running sccache server
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.WASABI_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.WASABI_SECRET_KEY }}
          SCCACHE_ENDPOINT: s3.wasabisys.com
          SCCACHE_BUCKET: kiwibrowser-${{ matrix.platform }}
        run: sccache --start-server

      - name: Checking sccache status
        run: sccache --show-stats

      - name: Displaying env
        run: env

      - name: Running gclient runhooks
        run: gclient runhooks
      
      - name: Generating build files
        run: gn gen ./secondary_disk/out/android_${{ matrix.platform }}
      
      - name: Creating obj directory
        run: mkdir -p ./secondary_disk/out/android_${{ matrix.platform }}/obj

      - name: Compiling source-code
        run: ninja -C ./secondary_disk/out/android_${{ matrix.platform }} chrome_public_apk

      - name: Checking sccache status
        run: sccache --show-stats

      - name: Uploading APK
        uses: actions/upload-artifact@v2
        with:
          name: kiwi-${{ matrix.platform }}.apk
          path: ./secondary_disk/out/android_${{ matrix.platform }}/apks/ChromePublic.apk
